---
// export const prerender = false;
import Layout from "../../layout/Layout.astro";

/* GET LANG */
import { getI18N } from "../../i18n";
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

/* Slider */
import Slider from "../Slider.astro";

const AIR_TOKEN = import.meta.env.AIRTABLE_TOKEN;
const response = await fetch(
  "https://api.airtable.com/v0/appS0ZQtfBjBChQfm/Cases",
  {
    headers: {
      Authorization: `Bearer ${AIR_TOKEN}`,
    },
  }
);

const DATA = await response.json();
const ROWS = DATA.records;

// Función para ordenar los objetos según el campo "order"
function orderData(response) {
  return response.sort((a, b) => a.fields.order - b.fields.order);
}

// Llamada a la función para ordenar la response
const RECORDS = orderData(ROWS);
---

<Layout title="Andrés Gonzalez" claim={i18n.ROLE} description={i18n.METADESC}>
  <section id="profile" class="section mt-15 mb-10 xg:my-0">
    <div class="container row h-full items-center xg:pt-10">
      <div class="col-[1/13]">
        <div class="flex">
          <p class="text-h1">
            <span class="text-body mr-5 xg:mr-[20rem]">
              {i18n.PROFILE}
            </span>
            {i18n.DESC}
          </p>
        </div>
      </div>
    </div>
  </section>

  <div id="works" >
  {
    RECORDS.map((caso) => (
      <section class="section">
        <div class="container row">
          <div class="col-[1/13]">
            <Slider {caso} />
          </div>
        </div>
      </section>
    ))
  }
  </div>  
</Layout>
